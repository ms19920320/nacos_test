spring:
  application:
    name: gateway
  main:
    web-application-type: reactive
  # nacos配置
  cloud:
    nacos:
      username: nacos
      password: 123456
      discovery:
        enabled: true
        server-addr: 120.48.48.87:8848
        namespace: 716ca2c6-7e8d-4db9-ab21-dd864f7f87f0
        group: nacos-test-group
      config:
        enabled: true
        server-addr: 120.48.48.87:8848
        namespace: 716ca2c6-7e8d-4db9-ab21-dd864f7f87f0
        group: nacos-test-group
        shared-configs[0]:
          group: nacos-test-group
          file-extension: yml
          data-id: gateway-application.yml
          refresh: true
        shared-configs[1]:
          group: nacos-test-group
          file-extension: yml
          data-id: gateway-common.yml
          refresh: true
    gateway:
      enabled: true
      discovery:
        locator:
          enabled: true
      routes:
        # 自身网关地址路由配置
        - id: gateway
          uri: lb://gateway
          predicates:
            - Path=/**
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@myLimiter}"  # 自定义类,限流配置，通过ip限流防止同一个ip恶意访问
                redis-rate-limiter.replenishRate: 1  # 令牌放入桶中速率
                redis-rate-limiter.burstCapacity: 1  # 桶中最大令牌数

        # 服务配置
        - id: score
          uri: lb://score
          predicates:
            - Path=/**
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@myLimiter}"  # 自定义类,限流配置，通过ip限流防止同一个ip恶意访问
                redis-rate-limiter.replenishRate: 1  # 令牌放入桶中速率
                redis-rate-limiter.burstCapacity: 1  # 桶中最大令牌数

        # 服务配置
        - id: order
          uri: lb://order
          predicates:
            - Path=/order/**

        # 服务配置
        - id: stock
          uri: lb://stock
          predicates:
            - Path=/**

        # 服务配置
        - id: authority
          uri: lb://authority
          predicates:
            - Path=/aaa/**
